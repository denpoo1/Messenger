version: "3"

services:

  cassandra:
    container_name: cassandra
    image: cassandra:latest
    ports:
      - "9042:9042"
    networks:
      - messaging-network


  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - messaging-network


  postgres:
    container_name: postgres
    image: debezium/example-postgres:2.4.1.Final
    restart: always
    environment:
      - POSTGRES_DB=messenger
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=25032001
    ports:
      - "5432:5432"
    networks:
      - messaging-network

  ## Kafka----------------------------------------------------------------------

  debezium-potgres-connector:
    container_name: debezium-potgres-connector
    image: debezium/connect:latest
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: group_invitations_connector
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on: [ kafka ]
    ports:
      - "8083:8083"
    networks:
      - messaging-network


  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    ports:
      - "8081:8081"
    depends_on: [ zookeeper, kafka ]
    networks:
      - messaging-network


  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - messaging-network


  kafka:
    container_name: kafka
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [ zookeeper ]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.100.3:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - "9092:9092"
    networks:
      - messaging-network


  adminer:
    container_name: adminer
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - messaging-network

  ## Services---------------------------------------------------------------

  discovery-service:
    container_name: discovery-service
    image: denpool/discovery-service
    restart: always
    ports:
      - "8761:8761"
    networks:
      - messaging-network
    depends_on:
      zipkin:
        condition: service_healthy
      postgres:
        condition: service_healthy
      cassandra:
        condition: service_healthy


  api-gateway:
    container_name: api-gateway
    image: denpool/api-gateway:0.0.1
    ports:
      - "3000:3000"
    networks:
      - messaging-network
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka


  lastseen-service:
    container_name: lastseen-service
    image: denpool/workout-service:0.0.2
    ports:
      - "5000:5000"
    networks:
      - messaging-network
    environment:
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/messenger
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_USER-SERVICE_URL=http://userprofile:7000
    depends_on:
      discovery-service:
        condition: service_started


  group-service:
    container_name: group-service
    image: denpool/workout-service:0.0.2
    ports:
      - "9000:9000"
    networks:
      - messaging-network
    environment:
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/messenger
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_USER-SERVICE_URL=http://userprofile:7000
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_MESSAGING-SERVICE_URL=http://userprofile:7000
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_STORAGE-SERVICE_URL=http://userprofile:7000
    depends_on:
      discovery-service:
        condition: service_started


  message-service:
    container_name: message-service
    image: denpool/workout-service:0.0.2
    ports:
      - "1000:1000"
    networks:
      - messaging-network
    environment:
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/messenger
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_USER-SERVICE_URL=http://userprofile:7000
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_MESSAGING-SERVICE_URL=http://userprofile:7000
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_STORAGE-SERVICE_URL=http://userprofile:7000
    depends_on:
      discovery-service:
        condition: service_started


  userprofile:
    container_name: userprofile-service
    image: denpool/userprofile-service:version3
    restart: always
    networks:
      - backend
    ports:
      - "7000:7000"
    depends_on:
      apache-cassandra:
        condition: service_healthy
      message-service:
        condition: service_started

networks:
  messaging-network: